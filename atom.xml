<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Jub's Stuff]]></title>
  <link href="http://JustB.github.io/atom.xml" rel="self"/>
  <link href="http://JustB.github.io/"/>
  <updated>2013-07-15T16:14:17+02:00</updated>
  <id>http://JustB.github.io/</id>
  <author>
    <name><![CDATA[Giustino Borzacchiello]]></name>
    
  </author>

  
  <entry>
    <title type="html"><![CDATA[Multiple Sums with different conditions in MySQL]]></title>
    <link href="http://JustB.github.io/multiple-sums-with-different-conditions-in-mysql/"/>
    <updated>2012-12-17T02:42:21+01:00</updated>
    <id>http://JustB.github.io/multiple-sums-with-different-conditions-in-mysql</id>
    <content type="html"><![CDATA[<p>Today I was working on my last project that involves some statistics on data. I had a table like this:</p>

<p><img class="center" src="http://JustB.github.io/images/tabella-1.png""></p>

<p>I needed the daily, monthly and yearly sum of the <code>value</code> field. How to do this?</p>

<!-- more -->


<p>The simplest approach was to have three different queries to retrieve the needed values:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="c1">--day</span>
</span><span class='line'><span class="k">SELECT</span> <span class="k">SUM</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>
</span><span class='line'><span class="k">FROM</span> <span class="k">table</span>
</span><span class='line'><span class="k">WHERE</span> <span class="nb">DATE</span><span class="p">(</span><span class="n">time</span><span class="p">)</span><span class="o">=</span><span class="n">CURDATE</span><span class="p">();</span>
</span><span class='line'><span class="c1">-- month</span>
</span><span class='line'><span class="k">SELECT</span> <span class="k">SUM</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>
</span><span class='line'><span class="k">FROM</span> <span class="k">table</span>
</span><span class='line'><span class="k">WHERE</span> <span class="k">MONTH</span><span class="p">(</span><span class="n">time</span><span class="p">)</span><span class="o">=</span><span class="k">MONTH</span><span class="p">(</span><span class="n">CURDATE</span><span class="p">())</span> <span class="k">AND</span> <span class="k">YEAR</span><span class="p">(</span><span class="n">time</span><span class="p">)</span><span class="o">=</span><span class="k">YEAR</span><span class="p">(</span><span class="n">CURDATE</span><span class="p">());</span>
</span><span class='line'><span class="c1">-- year</span>
</span><span class='line'><span class="k">SELECT</span> <span class="k">SUM</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>
</span><span class='line'><span class="k">FROM</span> <span class="k">table</span>
</span><span class='line'><span class="k">WHERE</span> <span class="k">YEAR</span><span class="p">(</span><span class="n">time</span><span class="p">)</span><span class="o">=</span><span class="k">YEAR</span><span class="p">(</span><span class="n">CURDATE</span><span class="p">());</span>
</span></code></pre></td></tr></table></div></figure>


<p>But I wasn&rsquo;t satisfied. I wanted to have all three values using only one query. So I searched for this issue and this is the resulting query:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">SELECT</span>
</span><span class='line'>  <span class="k">SUM</span><span class="p">(</span><span class="k">CASE</span> <span class="k">WHEN</span> <span class="nb">DATE</span><span class="p">(</span><span class="n">time</span><span class="p">)</span><span class="o">=</span><span class="n">CURDATE</span><span class="p">()</span>
</span><span class='line'>    <span class="k">THEN</span> <span class="n">value</span>
</span><span class='line'>    <span class="k">ELSE</span> <span class="mi">0</span> <span class="k">end</span><span class="p">)</span> <span class="k">AS</span> <span class="n">value_day</span><span class="p">,</span>
</span><span class='line'>  <span class="k">SUM</span><span class="p">(</span><span class="k">CASE</span> <span class="k">WHEN</span> <span class="k">MONTH</span><span class="p">(</span><span class="n">time</span><span class="p">)</span><span class="o">=</span><span class="k">MONTH</span><span class="p">(</span><span class="n">CURDATE</span><span class="p">())</span> <span class="k">AND</span> <span class="k">YEAR</span><span class="p">(</span><span class="n">time</span><span class="p">)</span><span class="o">=</span><span class="k">YEAR</span><span class="p">(</span><span class="n">CURDATE</span><span class="p">())</span>
</span><span class='line'>    <span class="k">THEN</span> <span class="n">value</span>
</span><span class='line'>    <span class="k">ELSE</span> <span class="mi">0</span> <span class="k">end</span><span class="p">)</span> <span class="k">AS</span> <span class="n">value_month</span><span class="p">,</span>
</span><span class='line'>  <span class="k">SUM</span><span class="p">(</span><span class="k">CASE</span> <span class="k">WHEN</span> <span class="k">YEAR</span><span class="p">(</span><span class="n">time</span><span class="p">)</span><span class="o">=</span><span class="k">YEAR</span><span class="p">(</span><span class="n">CURDATE</span><span class="p">())</span>
</span><span class='line'>    <span class="k">THEN</span> <span class="n">value</span>
</span><span class='line'>    <span class="k">ELSE</span> <span class="mi">0</span> <span class="k">end</span><span class="p">)</span> <span class="k">AS</span> <span class="n">value_year</span>
</span><span class='line'><span class="k">FROM</span> <span class="k">table</span>
</span></code></pre></td></tr></table></div></figure>


<p>Using the CASE construct, we increment independently the three values so that each row that satisfies the condition gets summed up.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bob Martinâ€™s Three Laws of TDD]]></title>
    <link href="http://JustB.github.io/bob-martin-three-laws-TDD/"/>
    <updated>2012-09-15T11:00:21+02:00</updated>
    <id>http://JustB.github.io/bob-martin-three-laws-TDD</id>
    <content type="html"><![CDATA[<blockquote><p>1. Do not write production code unless it is to make a failing unit test pass.<br/> 2. Do not write more of a unit test than is sufficient to fail, and build failures are failures.<br/> 3. Do not write more production code than is sufficient to pass the one failing unit test.</p><p>Even though this sounds restrictive, it is a very productive and fun way to develop software.</p><footer><strong>Bob Martin</strong> <cite><a href='http://butunclebob.com/ArticleS.UncleBob.TheThreeRulesOfTdd'>butunclebob.com/&hellip;</a></cite></footer></blockquote>



]]></content>
  </entry>
  
</feed>
