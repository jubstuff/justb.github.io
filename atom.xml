<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Giustino Borzacchiello]]></title>
  <link href="http://dev.borzacchiello.it/atom.xml" rel="self"/>
  <link href="http://dev.borzacchiello.it/"/>
  <updated>2014-08-31T00:00:42+02:00</updated>
  <id>http://dev.borzacchiello.it/</id>
  <author>
    <name><![CDATA[Giustino Borzacchiello]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[A Simple Silex Application Skeleton]]></title>
    <link href="http://dev.borzacchiello.it/blog/2014/08/30/a-simple-silex-application-skeleton/"/>
    <updated>2014-08-30T23:51:49+02:00</updated>
    <id>http://dev.borzacchiello.it/blog/2014/08/30/a-simple-silex-application-skeleton</id>
    <content type="html"><![CDATA[<p>I have set up a <a href="https://github.com/JustB/silex-skeleton">skeleton for Silex applications</a> that use Twig as a template library.</p>

<h2>Details</h2>

<p>It all starts with <code>web/index.php</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'>
</span><span class='line'><span class="k">require</span> <span class="nx">__DIR__</span> <span class="o">.</span> <span class="s1">&#39;/../vendor/autoload.php&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$app</span> <span class="o">=</span> <span class="k">require_once</span> <span class="nx">__DIR__</span> <span class="o">.</span> <span class="s1">&#39;/../src/app.php&#39;</span><span class="p">;</span>
</span><span class='line'><span class="k">require_once</span> <span class="nx">__DIR__</span> <span class="o">.</span> <span class="s1">&#39;/../config/prod.php&#39;</span><span class="p">;</span>
</span><span class='line'><span class="k">require_once</span> <span class="nx">__DIR__</span> <span class="o">.</span> <span class="s1">&#39;/../src/controllers.php&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$app</span><span class="o">-&gt;</span><span class="na">run</span><span class="p">();</span>
</span></code></pre></td></tr></table></div></figure>


<p>First, the app is created in <code>src/app.php</code> and the Twig Service Provider is loaded:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'>
</span><span class='line'><span class="k">use</span> <span class="nx">Silex\Application</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nx">Silex\Provider\TwigServiceProvider</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$app</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Application</span><span class="p">();</span>
</span><span class='line'><span class="nv">$app</span><span class="o">-&gt;</span><span class="na">register</span><span class="p">(</span><span class="k">new</span> <span class="nx">TwigServiceProvider</span><span class="p">());</span>
</span><span class='line'>
</span><span class='line'><span class="k">return</span> <span class="nv">$app</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Then, in <code>config/prod.php</code>, we set the Twig path (and other settings):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$app</span><span class="p">[</span><span class="s1">&#39;twig.path&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="nx">__DIR__</span> <span class="o">.</span> <span class="s1">&#39;/../templates&#39;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Finally, in <code>src/controllers.php</code> we load the routes:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$app</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">(</span><span class="s1">&#39;/&#39;</span><span class="p">,</span> <span class="k">function</span><span class="p">()</span> <span class="k">use</span> <span class="p">(</span><span class="nv">$app</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="nv">$app</span><span class="p">[</span><span class="s1">&#39;twig&#39;</span><span class="p">]</span><span class="o">-&gt;</span><span class="na">render</span><span class="p">(</span><span class="s1">&#39;hello.twig&#39;</span><span class="p">,</span> <span class="k">array</span><span class="p">(</span>
</span><span class='line'>        <span class="s1">&#39;name&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;World&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="p">));</span>
</span><span class='line'>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Thanks to</h3>

<p>This project is based on <a href="https://github.com/silexphp/Silex-Skeleton">Silex-Skeleton</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Short Tags, Long Pain]]></title>
    <link href="http://dev.borzacchiello.it/blog/2014/08/22/short-tags/"/>
    <updated>2014-08-22T22:50:28+02:00</updated>
    <id>http://dev.borzacchiello.it/blog/2014/08/22/short-tags</id>
    <content type="html"><![CDATA[<p>Recently I&rsquo;ve joined a colleague of mine into a project that involves a WordPress multisite. First thing first,
I downloaded the code and the database to study the codebase in my development environment, as I usually do.</p>

<p>I created a <code>.dev</code> virtualhost and used wp-cli to search and replace the original domain in the WordPress database.</p>

<p>Then, I opened the browser and navigated to the root site of the multisite. There, I noted something strange: the title
of the website was wrong. It was taking the title from on of the child site.</p>

<p>I googled for <em>&ldquo;WordPress load wrong site&rdquo;</em> without success, then I thought of testing the site with the Twenty Twelve
theme to check if there was something wrong with my installation. As I was thinking, with TT the site was working good.</p>

<p>So, there was something in the theme!</p>

<p>In this theme there were many loops over all the child sites, to print and link some informations in the root site.
After these loops in WordPress, you have to call the <code>restore_current_blog()</code> function, to reset the global environment
that WordPress needs to run. If you skip one of these calls, the site would act just like it was on my dev environment.</p>

<p>But all the loops had the call to <code>restore_current_blog()</code> at the bottom.</p>

<p>Then, I noted something strange; this:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span> <span class="nx">restore_current_blog</span><span class="p">();</span> <span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>I don&rsquo;t like short tags. I always try to make my code as portable as possible. I even had arguments in the past with some
colleagues in this regards. Given this, I always disable short tags on my servers. Even on development ones.</p>

<p>Needless to say, I just needed to replace the short tags with standard <code>&lt;?php</code> to make the site work as it should.
Oh, I hate short tags!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Posting to Twitter With Python]]></title>
    <link href="http://dev.borzacchiello.it/blog/2014/07/12/posting-to-twitter-with-python/"/>
    <updated>2014-07-12T20:12:50+02:00</updated>
    <id>http://dev.borzacchiello.it/blog/2014/07/12/posting-to-twitter-with-python</id>
    <content type="html"><![CDATA[<p>In my spare time I am working on a simple <a href="https://bufferapp.com/">Buffer</a> clone to post my links on various socials without having the limitation of the Free plan nor the Awesome plan.
I decided to code it in Python, because I want to leave the PHP world and add a new skill to my resume.</p>

<p>I begin working by studying the different methods for posting on socials, and today was <strong>Twitter day</strong>.</p>

<h2>First step: RTFM</h2>

<p>Before searching on Google <em>&ldquo;Post Twitter Python&rdquo;</em> I wanted to read <a href="https://dev.twitter.com/docs/">Twitter documentation</a>. The <a href="https://dev.twitter.com/docs/api">REST API</a> was the one that seemed to fit what I needed,
so I went on and read the <a href="https://dev.twitter.com/docs/api/1.1/post/statuses/update">POST statuses/update</a> page.</p>

<p>To post a tweet you need to issue a <code>POST</code> request to <code>https://api.twitter.com/1.1/statuses/update.json</code> with a <code>status</code> parameter. The request must be signed
using OAuth.</p>

<p>Twitter offers <a href="https://dev.twitter.com/docs/auth/obtaining-access-tokens">different methods for authentication</a> in order to get the necessary access tokens to issue requests. As I need this application only for personal use,
I decided to use the <a href="https://dev.twitter.com/docs/auth/tokens-devtwittercom">dev.twitter.com authentication</a>, that enables you to post from your personal account. Simply create a new Twitter application and generate
the access tokens<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>. There is an example in the documentation so I thought that I was almost done.</p>

<h2>Getting the home timeline (aka Twitter docs are outdated)</h2>

<p>Unfortunately, Twitter documentation for Python dev.twitter.com authentication is outdated, as it uses the <a href="https://github.com/brosner/python-oauth2">Brosner&rsquo;s Python-OAuth2 library</a> that was updated 5 years ago. So I searched for a more recent implementation of the OAuth protocol for Python and I found <a href="https://github.com/litl/rauth">rauth</a>. There is an <a href="https://github.com/litl/rauth/blob/master/examples/twitter-timeline-cli.py">example in the README</a> that show how to make a request to Twitter&rsquo;s API. But this example (shown below) is for the complete <a href="https://dev.twitter.com/docs/auth/3-legged-authorization">three-legged authentication method</a> and I didn&rsquo;t need that.</p>

<figure class='code'><figcaption><span>rauth basic example for 3-legged authentication</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">rauth</span> <span class="kn">import</span> <span class="n">OAuth1Service</span>
</span><span class='line'>
</span><span class='line'><span class="k">try</span><span class="p">:</span>
</span><span class='line'><span class="n">read_input</span> <span class="o">=</span> <span class="nb">raw_input</span>
</span><span class='line'><span class="k">except</span> <span class="ne">NameError</span><span class="p">:</span>
</span><span class='line'><span class="n">read_input</span> <span class="o">=</span> <span class="nb">input</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Get a real consumer key &amp; secret from https://dev.twitter.com/apps/new</span>
</span><span class='line'><span class="n">twitter</span> <span class="o">=</span> <span class="n">OAuth1Service</span><span class="p">(</span>
</span><span class='line'>        <span class="n">name</span><span class="o">=</span><span class="s">&#39;twitter&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="n">consumer_key</span><span class="o">=</span><span class="s">&#39;J8MoJG4bQ9gcmGh8H7XhMg&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="n">consumer_secret</span><span class="o">=</span><span class="s">&#39;7WAscbSy65GmiVOvMU5EBYn5z80fhQkcFWSLMJJu4&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="n">request_token_url</span><span class="o">=</span><span class="s">&#39;https://api.twitter.com/oauth/request_token&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="n">access_token_url</span><span class="o">=</span><span class="s">&#39;https://api.twitter.com/oauth/access_token&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="n">authorize_url</span><span class="o">=</span><span class="s">&#39;https://api.twitter.com/oauth/authorize&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="n">base_url</span><span class="o">=</span><span class="s">&#39;https://api.twitter.com/1.1/&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">request_token</span><span class="p">,</span> <span class="n">request_token_secret</span> <span class="o">=</span> <span class="n">twitter</span><span class="o">.</span><span class="n">get_request_token</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="n">authorize_url</span> <span class="o">=</span> <span class="n">twitter</span><span class="o">.</span><span class="n">get_authorize_url</span><span class="p">(</span><span class="n">request_token</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">print</span><span class="p">(</span><span class="s">&#39;Visit this URL in your browser: {url}&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">url</span><span class="o">=</span><span class="n">authorize_url</span><span class="p">))</span>
</span><span class='line'><span class="n">pin</span> <span class="o">=</span> <span class="n">read_input</span><span class="p">(</span><span class="s">&#39;Enter PIN from browser: &#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">session</span> <span class="o">=</span> <span class="n">twitter</span><span class="o">.</span><span class="n">get_auth_session</span><span class="p">(</span><span class="n">request_token</span><span class="p">,</span>
</span><span class='line'>        <span class="n">request_token_secret</span><span class="p">,</span>
</span><span class='line'>        <span class="n">method</span><span class="o">=</span><span class="s">&#39;POST&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="n">data</span><span class="o">=</span><span class="p">{</span><span class="s">&#39;oauth_verifier&#39;</span><span class="p">:</span> <span class="n">pin</span><span class="p">})</span>
</span><span class='line'>
</span><span class='line'><span class="n">params</span> <span class="o">=</span> <span class="p">{</span><span class="s">&#39;include_rts&#39;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>  <span class="c"># Include retweets</span>
</span><span class='line'>    <span class="s">&#39;count&#39;</span><span class="p">:</span> <span class="mi">10</span><span class="p">}</span>       <span class="c"># 10 tweets</span>
</span><span class='line'>
</span><span class='line'><span class="n">r</span> <span class="o">=</span> <span class="n">session</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;statuses/home_timeline.json&#39;</span><span class="p">,</span> <span class="n">params</span><span class="o">=</span><span class="n">params</span><span class="p">,</span> <span class="n">verify</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">tweet</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">r</span><span class="o">.</span><span class="n">json</span><span class="p">(),</span> <span class="mi">1</span><span class="p">):</span>
</span><span class='line'>    <span class="n">handle</span> <span class="o">=</span> <span class="n">tweet</span><span class="p">[</span><span class="s">&#39;user&#39;</span><span class="p">][</span><span class="s">&#39;screen_name&#39;</span><span class="p">]</span>
</span><span class='line'>    <span class="n">text</span> <span class="o">=</span> <span class="n">tweet</span><span class="p">[</span><span class="s">&#39;text&#39;</span><span class="p">]</span>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="s">u&#39;{0}. @{1} - {2}&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">handle</span><span class="p">,</span> <span class="n">text</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>


<p>As you can see, to get the access tokens, you&rsquo;ll need to get the pin from the authorization url. But with the dev.twitter.com authentication, I already have those tokens. So I just need to get the session, no need for authorization:</p>

<figure class='code'><figcaption><span>rauth basic example for dev.twitter.com authentication</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">rauth</span> <span class="kn">import</span> <span class="n">OAuth1Service</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Get a real consumer key &amp; secret from https://dev.twitter.com/apps/new</span>
</span><span class='line'><span class="n">twitter</span> <span class="o">=</span> <span class="n">OAuth1Service</span><span class="p">(</span>
</span><span class='line'>        <span class="n">name</span><span class="o">=</span><span class="s">&#39;twitter&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="n">consumer_key</span><span class="o">=</span><span class="s">&#39;1uUMxRkNp9oTplhnVh1pz96cj&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="n">consumer_secret</span><span class="o">=</span><span class="s">&#39;aBa89p6W96aS1sMAzzWCiH18gz5UxJNkQR4Tbeyb767pmST1dC&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="n">request_token_url</span><span class="o">=</span><span class="s">&#39;https://api.twitter.com/oauth/request_token&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="n">access_token_url</span><span class="o">=</span><span class="s">&#39;https://api.twitter.com/oauth/access_token&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="n">authorize_url</span><span class="o">=</span><span class="s">&#39;https://api.twitter.com/oauth/authorize&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="n">base_url</span><span class="o">=</span><span class="s">&#39;https://api.twitter.com/1.1/&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">request_token</span> <span class="o">=</span> <span class="n">MY_KEY</span>
</span><span class='line'><span class="n">request_token_secret</span> <span class="o">=</span> <span class="n">MY_SECRET</span>
</span><span class='line'>
</span><span class='line'><span class="n">authorize_url</span> <span class="o">=</span> <span class="n">twitter</span><span class="o">.</span><span class="n">get_authorize_url</span><span class="p">(</span><span class="n">request_token</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">session</span> <span class="o">=</span> <span class="n">twitter</span><span class="o">.</span><span class="n">get_session</span><span class="p">((</span><span class="n">request_token</span><span class="p">,</span> <span class="n">request_token_secret</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="n">params</span> <span class="o">=</span> <span class="p">{</span><span class="s">&#39;include_rts&#39;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span>  <span class="c"># Include retweets</span>
</span><span class='line'>    <span class="s">&#39;count&#39;</span><span class="p">:</span> <span class="mi">10</span><span class="p">}</span>       <span class="c"># 10 tweets</span>
</span><span class='line'>
</span><span class='line'><span class="n">r</span> <span class="o">=</span> <span class="n">session</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s">&#39;statuses/home_timeline.json&#39;</span><span class="p">,</span> <span class="n">params</span><span class="o">=</span><span class="n">params</span><span class="p">,</span> <span class="n">verify</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">tweet</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">r</span><span class="o">.</span><span class="n">json</span><span class="p">(),</span> <span class="mi">1</span><span class="p">):</span>
</span><span class='line'>    <span class="n">handle</span> <span class="o">=</span> <span class="n">tweet</span><span class="p">[</span><span class="s">&#39;user&#39;</span><span class="p">][</span><span class="s">&#39;screen_name&#39;</span><span class="p">]</span>
</span><span class='line'>    <span class="n">text</span> <span class="o">=</span> <span class="n">tweet</span><span class="p">[</span><span class="s">&#39;text&#39;</span><span class="p">]</span>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="s">u&#39;{0}. @{1} - {2}&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">handle</span><span class="p">,</span> <span class="n">text</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>


<p>The method that did the trick was <a href="https://rauth.readthedocs.org/en/latest/api/?highlight=get_session#rauth.OAuth1Service.get_session">get_session</a> that takes a tuple containing your access tokens
and get the current session. With that, I was able to call the Twitter APIs.</p>

<h2>Posting to Twitter</h2>

<p>I was almost done. To post to Twitter I needed to change the <code>get</code> method into a <code>post</code> and change the API endpoint and
parameters. So here is the final example:</p>

<figure class='code'><figcaption><span>Posting to Twitter with Python</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">rauth</span> <span class="kn">import</span> <span class="n">OAuth1Service</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;__main__&#39;</span><span class="p">:</span>
</span><span class='line'>    <span class="n">twitter</span> <span class="o">=</span> <span class="n">OAuth1Service</span><span class="p">(</span>
</span><span class='line'>            <span class="n">name</span><span class="o">=</span><span class="s">&#39;twitter&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="n">consumer_key</span><span class="o">=</span><span class="n">APP_CONSUMER_KEY</span><span class="p">,</span>
</span><span class='line'>            <span class="n">consumer_secret</span><span class="o">=</span><span class="n">APP_CONSUMER_SECRET</span><span class="p">,</span>
</span><span class='line'>            <span class="n">request_token_url</span><span class="o">=</span><span class="s">&#39;https://api.twitter.com/oauth/request_token&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="n">access_token_url</span><span class="o">=</span><span class="s">&#39;https://api.twitter.com/oauth/access_token&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="n">authorize_url</span><span class="o">=</span><span class="s">&#39;https://api.twitter.com/oauth/authorize&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="n">base_url</span><span class="o">=</span><span class="s">&#39;https://api.twitter.com/1.1/&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">request_token</span> <span class="o">=</span> <span class="n">MY_KEY</span>
</span><span class='line'>    <span class="n">request_token_secret</span> <span class="o">=</span> <span class="n">MY_SECRET</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">session</span> <span class="o">=</span> <span class="n">twitter</span><span class="o">.</span><span class="n">get_session</span><span class="p">((</span><span class="n">request_token</span><span class="p">,</span> <span class="n">request_token_secret</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">params</span> <span class="o">=</span> <span class="p">{</span><span class="s">&#39;status&#39;</span><span class="p">:</span> <span class="s">&#39;Tweet from Python&#39;</span><span class="p">}</span>
</span><span class='line'>    <span class="n">r</span> <span class="o">=</span> <span class="n">session</span><span class="o">.</span><span class="n">post</span><span class="p">(</span><span class="s">&#39;statuses/update.json&#39;</span><span class="p">,</span> <span class="n">params</span><span class="p">,</span> <span class="n">verify</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">print</span> <span class="n">r</span><span class="o">.</span><span class="n">json</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>

<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>Ensure that you have given your applicaton the &ldquo;Read/Write&rdquo; permission, before generating the tokens.<a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pdftk Tips and Commands]]></title>
    <link href="http://dev.borzacchiello.it/blog/2014/02/13/pdftk-tips/"/>
    <updated>2014-02-13T13:20:43+01:00</updated>
    <id>http://dev.borzacchiello.it/blog/2014/02/13/pdftk-tips</id>
    <content type="html"><![CDATA[<p>Often I need to manipulate in some way PDF files. On Windows, the best tool is Adobe Acrobat. But there is one downside: it costs way too much!
<a href="http://www.pdflabs.com/tools/pdftk-the-pdf-toolkit/">Pdftk</a> is a wonderful command line tool that lets you manipulate PDF files. It is free and you can install it even on Windows.</p>

<p>Here are some useful commands that I use:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># buil a PDF out of different PDF files
</span><span class='line'># Syntax is: Astartpage-endpage
</span><span class='line'>justb:~/pdftk
</span><span class='line'>⇒ pdftk A=file1.pdf B=file2.pdf C=file3.pdf cat A1 B1 A3 C1 A5-end output output.pdf</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setting Up a Vagrant Machine for Grails Development]]></title>
    <link href="http://dev.borzacchiello.it/blog/2014/02/12/setting-up-a-vagrant-machine-for-grails-development/"/>
    <updated>2014-02-12T23:21:27+01:00</updated>
    <id>http://dev.borzacchiello.it/blog/2014/02/12/setting-up-a-vagrant-machine-for-grails-development</id>
    <content type="html"><![CDATA[<p>Recently I&rsquo;ve tried several times to integrate <a href="http://www.vagrantup.com/">Vagrant</a> in my development flow, without success. So, now that I have to start
Grails development I decided to setup a development enviroment first.</p>

<p>I used Vagrant with <a href="https://www.virtualbox.org/">Virtualbox</a> and <a href="http://puppetlabs.com/">Puppet</a> for provisioning.</p>

<p>For the impatient, you can <a href="https://github.com/JustB/vagrant-grails">clone this repo</a> and go with <code>vagrant up</code> to get a fully functional grails
environment. If you want to know what&rsquo;s inside, keep on reading.</p>

<h2>Initial setup</h2>

<p>First install Vagrant and Virtualbox. Then create a folder and initialize the Vagrant machine:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ mkdir vagrant_grails && cd vagrant_grails
</span><span class='line'>$ vagrant box add base http://files.vagrantup.com/precise32.box
</span><span class='line'>$ vagrant init base</span></code></pre></td></tr></table></div></figure>


<p>Then open the newly created <code>Vagrantfile</code> and add these lines (or uncomment the relevant ones):</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>config.vm.provision :puppet do |puppet|
</span><span class='line'>  puppet.manifests_path = "manifests"
</span><span class='line'>  puppet.manifest_file  = "default.pp"
</span><span class='line'>  puppet.module_path = "modules"
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>


<p>Vagrant will look for a <code>default.pp</code> file under the <code>manifests</code> folder and for any missing modules
under the <code>modules</code> folder. So let&rsquo;s create them:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ mkdir modules
</span><span class='line'>$ mkdir manifests
</span><span class='line'>$ touch manifests/default.pp</span></code></pre></td></tr></table></div></figure>


<h2>Installing required Puppet modules</h2>

<p>We&rsquo;ll need some modules from the Puppet forge: specifically <a href="https://forge.puppetlabs.com/puppetlabs/apt">apt</a> and <a href="https://forge.puppetlabs.com/puppetlabs/stdlib">stdlib</a>. You can clone them
under the <code>modules</code> folder, or you can download the archives and extract them. It&rsquo;s up to you.</p>

<h2>Installing Java</h2>

<p>We&rsquo;re ready to start. We need Java for Grails to work, so let&rsquo;s get this settled. Unfortunately
since Java was acquired from Oracle it isn&rsquo;t available as a package in Ubuntu repositories. So we&rsquo;ll
need to add a ppa that has a package that will let us download the Java installer. The problem is,
this package require us to accept a license agreement. So we&rsquo;ll need to automatically accept it.
Write this in the <code>default.pp</code>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>class grails {
</span><span class='line'>  include apt
</span><span class='line'>  apt::ppa { "ppa:webupd8team/java": }
</span><span class='line'>
</span><span class='line'>  exec { 'apt-get update':
</span><span class='line'>    command =&gt; '/usr/bin/apt-get update',
</span><span class='line'>    before =&gt; Apt::Ppa["ppa:webupd8team/java"],
</span><span class='line'>  }
</span><span class='line'>
</span><span class='line'>  exec { 'apt-get update 2':
</span><span class='line'>    command =&gt; '/usr/bin/apt-get update',
</span><span class='line'>    require =&gt; [ Apt::Ppa["ppa:webupd8team/java"], Package["git-core"] ],
</span><span class='line'>  }
</span><span class='line'>
</span><span class='line'>  package { ["vim",
</span><span class='line'>             "curl",
</span><span class='line'>             "git-core",
</span><span class='line'>             "bash"]:
</span><span class='line'>    ensure =&gt; present,
</span><span class='line'>    require =&gt; Exec["apt-get update"],
</span><span class='line'>    before =&gt; Apt::Ppa["ppa:webupd8team/java"],
</span><span class='line'>  }
</span><span class='line'>
</span><span class='line'>  package { ["oracle-java7-installer"]:
</span><span class='line'>    ensure =&gt; present,
</span><span class='line'>    require =&gt; Exec["apt-get update 2"],
</span><span class='line'>  }
</span><span class='line'>
</span><span class='line'>  exec {
</span><span class='line'>    "accept_license":
</span><span class='line'>    command =&gt; "echo debconf shared/accepted-oracle-license-v1-1 select true | sudo debconf-set-selections && echo debconf shared/accepted-oracle-license-v1-1 seen true | sudo debconf-set-selections",
</span><span class='line'>    cwd =&gt; "/home/vagrant",
</span><span class='line'>    user =&gt; "vagrant",
</span><span class='line'>    path    =&gt; "/usr/bin/:/bin/",
</span><span class='line'>    before =&gt; Package["oracle-java7-installer"],
</span><span class='line'>    logoutput =&gt; true,
</span><span class='line'>  }
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>include grails</span></code></pre></td></tr></table></div></figure>


<p>The task are very simple: we update the repositories, add the webupd8team ppa, then we update the
repositories again. Then we install the Java installer and set the flag to accept the license,
without it asking us. In this way we&rsquo;ll get a fully automated installation.</p>

<h2>Installing Grails</h2>

<p>Now we need to install Grails. The steps are very similar: we&rsquo;ll add a PPA (as it is stated in the
<a href="http://grails.org/download/ubuntu">Grails docs</a>) and install the package. We&rsquo;ll also need to set the <code>JAVA_HOME</code> environment variable
that is needed by Grails. Here is the full Puppet manifest:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>class grails {
</span><span class='line'>  include apt
</span><span class='line'>  apt::ppa { "ppa:webupd8team/java": }
</span><span class='line'>  apt::ppa { "ppa:groovy-dev/grails": }
</span><span class='line'>
</span><span class='line'>  exec { 'apt-get update':
</span><span class='line'>    command =&gt; '/usr/bin/apt-get update',
</span><span class='line'>    before =&gt; Apt::Ppa["ppa:webupd8team/java"],
</span><span class='line'>  }
</span><span class='line'>
</span><span class='line'>  exec { 'apt-get update 2':
</span><span class='line'>    command =&gt; '/usr/bin/apt-get update',
</span><span class='line'>    require =&gt; [ Apt::Ppa["ppa:webupd8team/java"], Apt::Ppa["ppa:groovy-dev/grails"], Package["git-core"] ],
</span><span class='line'>  }
</span><span class='line'>
</span><span class='line'>  package { ["vim",
</span><span class='line'>             "curl",
</span><span class='line'>             "git-core",
</span><span class='line'>             "bash"]:
</span><span class='line'>    ensure =&gt; present,
</span><span class='line'>    require =&gt; Exec["apt-get update"],
</span><span class='line'>    before =&gt; Apt::Ppa["ppa:webupd8team/java"],
</span><span class='line'>  }
</span><span class='line'>
</span><span class='line'>  package { ["oracle-java7-installer"]:
</span><span class='line'>    ensure =&gt; present,
</span><span class='line'>    require =&gt; Exec["apt-get update 2"],
</span><span class='line'>  }
</span><span class='line'>
</span><span class='line'>  exec {
</span><span class='line'>    "accept_license":
</span><span class='line'>    command =&gt; "echo debconf shared/accepted-oracle-license-v1-1 select true | sudo debconf-set-selections && echo debconf shared/accepted-oracle-license-v1-1 seen true | sudo debconf-set-selections",
</span><span class='line'>    cwd =&gt; "/home/vagrant",
</span><span class='line'>    user =&gt; "vagrant",
</span><span class='line'>    path    =&gt; "/usr/bin/:/bin/",
</span><span class='line'>    before =&gt; Package["oracle-java7-installer"],
</span><span class='line'>    logoutput =&gt; true,
</span><span class='line'>  }
</span><span class='line'>
</span><span class='line'>  package { ["grails-ppa"]:
</span><span class='line'>    ensure =&gt; present,
</span><span class='line'>    require =&gt; Package["oracle-java7-installer"],
</span><span class='line'>  }
</span><span class='line'>
</span><span class='line'>  exec { "add_java_home":
</span><span class='line'>    command =&gt; '/bin/echo "export JAVA_HOME=/usr/lib/jvm/java-7-oracle" &gt;&gt; /home/vagrant/.bashrc',
</span><span class='line'>  }
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>include grails</span></code></pre></td></tr></table></div></figure>


<h2>Starting the machine</h2>

<p>Now you only need to start your machine.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vagrant up
</span><span class='line'><span class="nv">$ </span>vagrant ssh
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Working With Strongloop's Loopback]]></title>
    <link href="http://dev.borzacchiello.it/blog/2014/01/17/working-with-strongloops-loopback/"/>
    <updated>2014-01-17T12:24:18+01:00</updated>
    <id>http://dev.borzacchiello.it/blog/2014/01/17/working-with-strongloops-loopback</id>
    <content type="html"><![CDATA[<p>So I am working with Loopback by Strongloop.</p>

<h2>Creating models</h2>

<p>To create a model, you simply place a .js file in the models folder. After calling app.boot, loopback will load all .js
files automatically. But how to reference those models?</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">//models/product.js</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">Model</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;loopback&#39;</span><span class="p">).</span><span class="nx">Model</span><span class="p">;</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">Product</span> <span class="o">=</span> <span class="nx">Model</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="s1">&#39;product&#39;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">//Anywhere else</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">loopback</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;loopback&#39;</span><span class="p">);</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">Product</span> <span class="o">=</span> <span class="nx">loopback</span><span class="p">.</span><span class="nx">getModel</span><span class="p">(</span><span class="s1">&#39;product&#39;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Connecting to a MongoDb Database</h2>

<p>To create a connection with a mongodb database (or for any other datasource, just replace mongo with its name), you have
several choices.</p>

<p>First, you can create it programmatically, using the <code>loopback.createDataSource</code> method. This method accepts a
JavaScript object with these properties:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">loopback</span><span class="p">.</span><span class="nx">createDataSource</span><span class="p">({</span>
</span><span class='line'>  <span class="nx">connector</span><span class="o">:</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;loopback-connector-mongodb&#39;</span><span class="p">),</span>
</span><span class='line'>  <span class="nx">host</span><span class="o">:</span> <span class="mf">127.0</span><span class="p">.</span><span class="mf">0.1</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">port</span><span class="o">:</span> <span class="mi">27017</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">database</span><span class="o">:</span> <span class="s1">&#39;myDatabaseName&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">username</span><span class="o">:</span> <span class="s1">&#39;myDatabaseUser&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">password</span><span class="o">:</span> <span class="s1">&#39;myPassword&#39;</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>Otherwise, you can specify your datasource in the <code>datasources.json</code> file in the root directory</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="s2">&quot;db&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="s2">&quot;defaultForType&quot;</span><span class="o">:</span> <span class="s2">&quot;db&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;connector&quot;</span><span class="o">:</span> <span class="s2">&quot;mongodb&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;host&quot;</span><span class="o">:</span> <span class="mf">127.0</span><span class="p">.</span><span class="mf">0.1</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;port&quot;</span><span class="o">:</span> <span class="mi">27017</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;database&quot;</span><span class="o">:</span> <span class="s1">&#39;myDatabaseName&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;username&quot;</span><span class="o">:</span> <span class="s1">&#39;myDatabaseUser&#39;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;password&quot;</span><span class="o">:</span> <span class="s1">&#39;myPassword&#39;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What I Learned Today - 14/01/2014]]></title>
    <link href="http://dev.borzacchiello.it/blog/2014/01/14/what-i-learned-today-14-slash-01-slash-2014/"/>
    <updated>2014-01-14T01:59:10+01:00</updated>
    <id>http://dev.borzacchiello.it/blog/2014/01/14/what-i-learned-today-14-slash-01-slash-2014</id>
    <content type="html"><![CDATA[<p>Today has been a good day. This morning I decided that I would begin my training as a runner. I ran for 10 minutes! (Yes, I&rsquo;m unfit. Sigh.).</p>

<p>Anyway, this is not an health blog, but a programming one (I hope). So let&rsquo;s see what I learned today!</p>

<!--more-->


<h3>Smarty: dump variable and verbatim text</h3>

<p>So I got this job, and I have to use Smarty. I know, I know, it&rsquo;s so 2000. But hey, it&rsquo;s work. I needed to dump some variables for a quick analysis. This is how it is done:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='smarty'><span class='line'><span class="cp">{</span> <span class="nv">$variable</span> <span class="o">|</span> <span class="na">print_r</span> <span class="cp">}</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<p>Simple enough. Next, there where some errors regarding (brr) inline JavaScript. The { } where being processed by Smarty. They needed to be passed unfiltered. This is done using the <code>{literal}</code> tag:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='smarty'><span class='line'><span class="cp">{</span><span class="nf">literal</span><span class="cp">}</span><span class="x"></span>
</span><span class='line'><span class="x">&lt;script&gt;</span>
</span><span class='line'><span class="x">function foo() </span><span class="cp">{</span>
</span><span class='line'>  <span class="na">console</span><span class="o">.</span><span class="na">log</span><span class="o">(</span><span class="s1">&#39;bar&#39;</span><span class="o">);</span>
</span><span class='line'><span class="cp">}</span><span class="x"></span>
</span><span class='line'><span class="x">&lt;/script&gt;</span>
</span><span class='line'><span class="cp">{</span><span class="nf">/literal</span><span class="cp">}</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<h3>Copy text in the clipboard using Ruby in Linux</h3>

<p>I created this blog using Octopress. To create a new post you have to issue <code>rake new_post['post title']</code>.
Usually the filename is some mix of date and the title you typed. After creating the post you need to open it in Vim (or your favourite editor).
So I modified the rake task to copy the filename in the clipboard, so that I don&rsquo;t have to type it.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Creating new post: </span><span class="si">#{</span><span class="n">filename</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="nb">system</span><span class="p">(</span><span class="s2">&quot;echo &#39;</span><span class="si">#{</span><span class="n">filename</span><span class="si">}</span><span class="s2">&#39; | xclip&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>You have to install the <code>xclip</code> package.</p>

<h3>Cancel last search highlight in Vim</h3>

<p>I hate it! <code>:set nohlsearch</code> FTW!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What I Learned Today - 12/01/2014 Edition]]></title>
    <link href="http://dev.borzacchiello.it/blog/2014/01/13/what-i-learned-today-12-slash-01-slash-2014-edition/"/>
    <updated>2014-01-13T00:36:12+01:00</updated>
    <id>http://dev.borzacchiello.it/blog/2014/01/13/what-i-learned-today-12-slash-01-slash-2014-edition</id>
    <content type="html"><![CDATA[<p>Today was a strange day. I took the resolution to install again Linux on my work laptop, after a year or so of <em>Windows only</em>.
&ldquo;Why did you do <strong>that</strong>?&rdquo; you could ask. I don&rsquo;t know.</p>

<p>Maybe because I needed Photoshop for my previous work. I don&rsquo;t know.
I&rsquo;ve learned much, though. I&rsquo;ve pushed the Windows development environment to the limit but, simple as that, I&rsquo;m not a Windows guy.</p>

<p>Just two minutes into my Linux environment and I felt home.</p>

<p>Anyway, what I learned today? (that&rsquo;s a rhyme!)</p>

<!--more-->


<h3>Accept merge conflicts as a whole (local/remote)</h3>

<p>It&rsquo;s as simple as</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git checkout --theirs /path/to/file</span></code></pre></td></tr></table></div></figure>


<p>or</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git checkout --ours /path/to/file</span></code></pre></td></tr></table></div></figure>


<p><a href="http://stackoverflow.com/questions/6650215/how-to-keep-the-local-file-or-the-remote-file-during-merge-using-git-and-the-com">Source</a></p>

<h3>Executing a command in Puppet in a specific directory</h3>

<p>Do you want to execute a command with puppet, but you need it to run from a specific folder?</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>exec { command:
</span><span class='line'>  cwd =&gt; "path/to/folder"
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p><a href="http://docs.puppetlabs.com/references/latest/type.html#exec">Puppet exec documentation</a></p>

<h2>Sites, Apps, Services, Videos</h2>

<ul>
<li><a href="http://markdalgleish.com/projects/bespoke.js/">Bespoke.js</a>: a wonderful presentation framework written in JavaScript.</li>
<li><a href="http://www.youtube.com/watch?v=L0pjVcIsU6A">Node.js explained</a>: an introduction to Node.js. I really liked it! Very concise, but also informative.</li>
<li><a href="http://apidocjs.com/">apiDoc</a>: npm package to generate documentation for RESTful web APIs.</li>
<li><a href="http://build-podcast.com/">Build podcasts</a>: an on-going series of podcasts on web development tools.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Project Euler - Problem 1]]></title>
    <link href="http://dev.borzacchiello.it/blog/2013/10/13/project-euler-problem-1/"/>
    <updated>2013-10-13T21:03:00+02:00</updated>
    <id>http://dev.borzacchiello.it/blog/2013/10/13/project-euler-problem-1</id>
    <content type="html"><![CDATA[<p>Today I started to solve the Project Euler problems. I don&rsquo;t know how much time I can spend solving these problems, but I hope to complete the <em>quest</em> in the span of a lifetime :).</p>

<p>So here is the first problem:</p>

<blockquote><p>If we list all the natural numbers below 10 that are multiples of 3 and 5, we get 3, 5, 6, 9. The sum of these multiples is 23.</p><p>Find the sum of all the multiples of 3 and 5 below 1000.</p><footer><strong>Problem 1 - Project Euler</strong></footer></blockquote>


<!--more-->


<p>The first try I could think of, was the obvious brute force approach. Cycle through all the numbers, and sum them up if they are multiples of 3 or 5:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sum = 0
</span><span class='line'>for n in 1..1000
</span><span class='line'>    if n % 3 == 0 || n % 5 == 0 then
</span><span class='line'>        sum += n</span></code></pre></td></tr></table></div></figure>


<p>This worked but I wasn&rsquo;t too satisfied: it was way too simple. So I started to think of a possible alternate solution.</p>

<p>I thought to loop through the multiples of 3 and 5 at the same time, having two variables to hold the partial result. Something like:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>n3 = n5 = 0
</span><span class='line'>sum = 0
</span><span class='line'>while n3 &lt; 1000
</span><span class='line'>    n3 += 3
</span><span class='line'>    n5 += 5
</span><span class='line'>    sum += n3 + n5</span></code></pre></td></tr></table></div></figure>


<p>Well, in my defense, it seemed like a good idea&hellip;but it misses completely the solution. Time to move on.</p>

<p>What would you do when you have to think about a problem? The answer is obvious: take a shower. And it worked!</p>

<h2>The shower solution</h2>

<p>So what does the shower told me? Let&rsquo;s assume that we have to find the sum of all the multiples of 3 and 5 below 20, to keep the math simple.</p>

<p>These multiples are:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>3+5+6+9+10+12+15+18</span></code></pre></td></tr></table></div></figure>


<p>that sum up to 78. Let&rsquo;s split them up in multiples of 3 and multiples of 5:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Multiples of 3: 
</span><span class='line'>3+6+9+12+15+18 = 63
</span><span class='line'>
</span><span class='line'>Multiples of 5: 
</span><span class='line'>5+10+15 = 30</span></code></pre></td></tr></table></div></figure>


<p>But we could look at those like:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>3 * (1+2+3+4+5+6) = 63
</span><span class='line'>
</span><span class='line'>5 * (1+2+3) = 30</span></code></pre></td></tr></table></div></figure>


<p>Start to see the pattern? If we could just find the sum of the first <code>N</code> natural numbers, we could find the sum just with simple multiplications. But we can! Here&rsquo;s how:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Sum of the first N numbers
</span><span class='line'>
</span><span class='line'>N*(N+1)/2</span></code></pre></td></tr></table></div></figure>


<p>So we could write:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>3 * 6 * 7 / 2 = 63
</span><span class='line'>
</span><span class='line'>5 * 3 * 4 / 2 = 30</span></code></pre></td></tr></table></div></figure>


<h2>Problems, always problems</h2>

<p>I hear you: <em>&ldquo;But 63+30 isn&rsquo;t 78!&rdquo;</em>. Right, where is the problem? The problem is that we are including the number <code>15</code> twice. We have to subtract this number from the total to have the correct solution:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>3 * 6 * 7 / 2  = 63
</span><span class='line'>                 +
</span><span class='line'>5 * 3 * 4 / 2  = 30
</span><span class='line'>                 -
</span><span class='line'>15 * 1 * 2 / 2 = 15
</span><span class='line'>               ------
</span><span class='line'>                 78</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>Why is this? Because 15 = 5 * 3, so we have to consider this number and all its multiples only once (as it should count as a multiple of 3 <strong>or</strong> a multiple of 5).</p>

<p>Now we are very close to the alternate solution: there is just one more thing to consider: how do we get <code>N</code> to calculate the first <code>N</code> numbers? In our example we found the sum for the first 6 numbers for 3, the first 3 ones for 5 and 1 for 15. How did we find these values?</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>3 * (1+2+3+4+5+6) = 63 
</span><span class='line'>                    +   
</span><span class='line'>5 * (1+2+3)       = 30  
</span><span class='line'>                    -   
</span><span class='line'>15 * 1            = 15  
</span><span class='line'>                  ------
</span><span class='line'>                    78  </span></code></pre></td></tr></table></div></figure>


<p>It&rsquo;s very simple: we just have to divide the max value for the number and take the integer part of the result.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>20 / 3 = 6
</span><span class='line'>
</span><span class='line'>20 / 5 = 4
</span><span class='line'>
</span><span class='line'>20 / 15 = 1</span></code></pre></td></tr></table></div></figure>


<p>In the case of 5, we have to decrement by 1, because the max value is out of the range, that&rsquo;s why we got 3 instead of 4.</p>

<h2>Alternate solution</h2>

<p>So here is the alternate solution:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>n3 = 1000 / 3
</span><span class='line'>n5 = (1000 / 5) - 1
</span><span class='line'>n15 = (1000 / 15) 
</span><span class='line'>
</span><span class='line'>sum3 = 3 * n3 * (n3 + 1) / 2
</span><span class='line'>sum5 = 5 * n5 * (n5 + 1) / 2
</span><span class='line'>sum15 = 15 * n15 * (n15 + 1) / 2
</span><span class='line'>
</span><span class='line'>sum = sum3 + sum5 - sum15
</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What I Learned Today - 13/10/2013 Edition]]></title>
    <link href="http://dev.borzacchiello.it/blog/2013/10/13/what-i-learned-13-10-2013/"/>
    <updated>2013-10-13T12:18:57+02:00</updated>
    <id>http://dev.borzacchiello.it/blog/2013/10/13/what-i-learned-13-10-2013</id>
    <content type="html"><![CDATA[<h2>Create a zip on the command line (simple edition)</h2>

<p>How to create a zip file in Linux? All the latest version of Ubuntu have an <em>Compress</em> entry in the contextual menu. But today I wanted to learn how to do it on the command line.</p>

<p>It turned out to be pretty simple:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>zip zipfile_name files_to_zip</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What I Learned Today - 12/10/2013 Edition]]></title>
    <link href="http://dev.borzacchiello.it/blog/2013/10/12/what-i-learned-today-11-slash-10-slash-2013-edition/"/>
    <updated>2013-10-12T17:50:03+02:00</updated>
    <id>http://dev.borzacchiello.it/blog/2013/10/12/what-i-learned-today-11-slash-10-slash-2013-edition</id>
    <content type="html"><![CDATA[<h2>So what I learned today?</h2>

<h3>Replace method in Python</h3>

<p>In Python you can use the <code>replace</code> method on strings to replace a part of it with another</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>In [3]: key = '/blobstore/quhab72=qaqerqfxbhr'
</span><span class='line'>In [4]: key.replace('/blobstore/', '')
</span><span class='line'>Out[4]: 'quhab72=qaqerqfxbhr'</span></code></pre></td></tr></table></div></figure>


<h3>Logging in AppEngine</h3>

<p>To have your debug logs appear in the console when you are running an AppEngine app in your development environment, just start the server with:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ dev_appserver.py --log_level=debug .</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Multiple Sums With Different Conditions in MySQL]]></title>
    <link href="http://dev.borzacchiello.it/blog/2012/12/17/multiple-sums-with-different-conditions-in-mysql/"/>
    <updated>2012-12-17T21:52:52+01:00</updated>
    <id>http://dev.borzacchiello.it/blog/2012/12/17/multiple-sums-with-different-conditions-in-mysql</id>
    <content type="html"><![CDATA[<p>Today I was working on my last project that involves some statistics on data. I had a table like this:</p>

<p><img class="center" src="http://dev.borzacchiello.it/images/tabella-1.png""></p>

<p>I needed the daily, monthly and yearly sum of the <code>value</code> field. How to do this?</p>

<!-- more -->


<p>The simplest approach was to have three different queries to retrieve the needed values:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="c1">--day</span>
</span><span class='line'><span class="k">SELECT</span> <span class="k">SUM</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>
</span><span class='line'><span class="k">FROM</span> <span class="k">table</span>
</span><span class='line'><span class="k">WHERE</span> <span class="nb">DATE</span><span class="p">(</span><span class="n">time</span><span class="p">)</span><span class="o">=</span><span class="n">CURDATE</span><span class="p">();</span>
</span><span class='line'><span class="c1">-- month</span>
</span><span class='line'><span class="k">SELECT</span> <span class="k">SUM</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>
</span><span class='line'><span class="k">FROM</span> <span class="k">table</span>
</span><span class='line'><span class="k">WHERE</span> <span class="k">MONTH</span><span class="p">(</span><span class="n">time</span><span class="p">)</span><span class="o">=</span><span class="k">MONTH</span><span class="p">(</span><span class="n">CURDATE</span><span class="p">())</span> <span class="k">AND</span> <span class="k">YEAR</span><span class="p">(</span><span class="n">time</span><span class="p">)</span><span class="o">=</span><span class="k">YEAR</span><span class="p">(</span><span class="n">CURDATE</span><span class="p">());</span>
</span><span class='line'><span class="c1">-- year</span>
</span><span class='line'><span class="k">SELECT</span> <span class="k">SUM</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>
</span><span class='line'><span class="k">FROM</span> <span class="k">table</span>
</span><span class='line'><span class="k">WHERE</span> <span class="k">YEAR</span><span class="p">(</span><span class="n">time</span><span class="p">)</span><span class="o">=</span><span class="k">YEAR</span><span class="p">(</span><span class="n">CURDATE</span><span class="p">());</span>
</span></code></pre></td></tr></table></div></figure>


<p>But I wasn&rsquo;t satisfied. I wanted to have all three values using only one query. So I searched for this issue and this is the resulting query:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='sql'><span class='line'><span class="k">SELECT</span>
</span><span class='line'>  <span class="k">SUM</span><span class="p">(</span><span class="k">CASE</span> <span class="k">WHEN</span> <span class="nb">DATE</span><span class="p">(</span><span class="n">time</span><span class="p">)</span><span class="o">=</span><span class="n">CURDATE</span><span class="p">()</span>
</span><span class='line'>    <span class="k">THEN</span> <span class="n">value</span>
</span><span class='line'>    <span class="k">ELSE</span> <span class="mi">0</span> <span class="k">end</span><span class="p">)</span> <span class="k">AS</span> <span class="n">value_day</span><span class="p">,</span>
</span><span class='line'>  <span class="k">SUM</span><span class="p">(</span><span class="k">CASE</span> <span class="k">WHEN</span> <span class="k">MONTH</span><span class="p">(</span><span class="n">time</span><span class="p">)</span><span class="o">=</span><span class="k">MONTH</span><span class="p">(</span><span class="n">CURDATE</span><span class="p">())</span> <span class="k">AND</span> <span class="k">YEAR</span><span class="p">(</span><span class="n">time</span><span class="p">)</span><span class="o">=</span><span class="k">YEAR</span><span class="p">(</span><span class="n">CURDATE</span><span class="p">())</span>
</span><span class='line'>    <span class="k">THEN</span> <span class="n">value</span>
</span><span class='line'>    <span class="k">ELSE</span> <span class="mi">0</span> <span class="k">end</span><span class="p">)</span> <span class="k">AS</span> <span class="n">value_month</span><span class="p">,</span>
</span><span class='line'>  <span class="k">SUM</span><span class="p">(</span><span class="k">CASE</span> <span class="k">WHEN</span> <span class="k">YEAR</span><span class="p">(</span><span class="n">time</span><span class="p">)</span><span class="o">=</span><span class="k">YEAR</span><span class="p">(</span><span class="n">CURDATE</span><span class="p">())</span>
</span><span class='line'>    <span class="k">THEN</span> <span class="n">value</span>
</span><span class='line'>    <span class="k">ELSE</span> <span class="mi">0</span> <span class="k">end</span><span class="p">)</span> <span class="k">AS</span> <span class="n">value_year</span>
</span><span class='line'><span class="k">FROM</span> <span class="k">table</span>
</span></code></pre></td></tr></table></div></figure>


<p>Using the CASE construct, we increment independently the three values so that each row that satisfies the condition gets summed up.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bob Martin's Three Laws of TDD]]></title>
    <link href="http://dev.borzacchiello.it/blog/2012/09/15/bob-martin-three-laws-TDD/"/>
    <updated>2012-09-15T11:00:21+02:00</updated>
    <id>http://dev.borzacchiello.it/blog/2012/09/15/bob-martin-three-laws-TDD</id>
    <content type="html"><![CDATA[<blockquote><p>1. Do not write production code unless it is to make a failing unit test pass.<br/> 2. Do not write more of a unit test than is sufficient to fail, and build failures are failures.<br/> 3. Do not write more production code than is sufficient to pass the one failing unit test.</p><p>Even though this sounds restrictive, it is a very productive and fun way to develop software.</p><footer><strong>Bob Martin</strong> <cite><a href='http://butunclebob.com/ArticleS.UncleBob.TheThreeRulesOfTdd'>butunclebob.com/&hellip;</a></cite></footer></blockquote>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[On Software Inventory]]></title>
    <link href="http://dev.borzacchiello.it/blog/2012/07/12/on-software-inventory/"/>
    <updated>2012-07-12T12:18:57+02:00</updated>
    <id>http://dev.borzacchiello.it/blog/2012/07/12/on-software-inventory</id>
    <content type="html"><![CDATA[<p>Few days ago Joel Spolsky published a post on his blog from the title: <a href="http://www.joelonsoftware.com/items/2012/07/09.html">&ldquo;Software Inventory&rdquo;</a>.
In this post, he associates &ldquo;inventory costs&rdquo; to software, just like a traditional factory. Spolsky highlights these points where inventory piles up:</p>

<ul>
<li>Feature backlogs</li>
<li>Bug backlogs</li>
<li>Undeployed features</li>
</ul>


<p>After reading his analysis, I thought that the very difference between baking bread and developing software is the <strong>absence of phisicity</strong>.
Having thousands of ounces of flour is very different from having a thousands more lines of code in a file.
Even if they could have the same cost of management.</p>

<p>What can be the solution, then? We need to make the invisible, visible, and material what is immaterial.
All the things that slow down the development process <strong>must hurt</strong> and be always visible, just like the flour should be stocked in the factory offices.</p>

<p>So, I like the idea that moves <a href="https://trello.com/">Trello</a>, the project manager developed by <a href="http://www.fogcreek.com">Fog Creek</a></p>

<blockquote>
  Trello works great for a reasonable amount of inventory, but it <strong>intentionally</strong>
starts to get klunky if you have too many cards in one list.
</blockquote>


<p>Just like a crowded desk, Trello is difficult to manage if there are too many cards.</p>

<p>In the end, there are advantages in the absence of phisicity, but we must consider the hidden costs that very often are ignored.</p>
]]></content>
  </entry>
  
</feed>
