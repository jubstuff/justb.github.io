<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Wilt | Little Right's Journal]]></title>
  <link href="http://JustB.github.io/blog/categories/wilt/atom.xml" rel="self"/>
  <link href="http://JustB.github.io/"/>
  <updated>2014-01-29T23:32:47+01:00</updated>
  <id>http://JustB.github.io/</id>
  <author>
    <name><![CDATA[Giustino Borzacchiello]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[What I Learned Today - 14/01/2014]]></title>
    <link href="http://JustB.github.io/blog/2014/01/14/what-i-learned-today-14-slash-01-slash-2014/"/>
    <updated>2014-01-14T01:59:10+01:00</updated>
    <id>http://JustB.github.io/blog/2014/01/14/what-i-learned-today-14-slash-01-slash-2014</id>
    <content type="html"><![CDATA[<p>Today has been a good day. This morning I decided that I would begin my training as a runner. I ran for 10 minutes! (Yes, I&rsquo;m unfit. Sigh.).</p>

<p>Anyway, this is not an health blog, but a programming one (I hope). So let&rsquo;s see what I learned today!</p>

<!--more-->


<h3>Smarty: dump variable and verbatim text</h3>

<p>So I got this job, and I have to use Smarty. I know, I know, it&rsquo;s so 2000. But hey, it&rsquo;s work. I needed to dump some variables for a quick analysis. This is how it is done:</p>

<p><code>smarty
{ $variable | print_r }
</code></p>

<p>Simple enough. Next, there where some errors regarding (brr) inline JavaScript. The { } where being processed by Smarty. They needed to be passed unfiltered. This is done using the <code>{literal}</code> tag:</p>

<p>```smarty
{literal}</p>

<script>
function foo() {
  console.log('bar');
}
</script>


<p>{/literal}
```</p>

<h3>Copy text in the clipboard using Ruby in Linux</h3>

<p>I created this blog using Octopress. To create a new post you have to issue <code>rake new_post['post title']</code>.
Usually the filename is some mix of date and the title you typed. After creating the post you need to open it in Vim (or your favourite editor).
So I modified the rake task to copy the filename in the clipboard, so that I don&rsquo;t have to type it.</p>

<p><code>ruby
puts "Creating new post: #{filename}"
system("echo '#{filename}' | xclip")
</code></p>

<p>You have to install the <code>xclip</code> package.</p>

<h3>Cancel last search highlight in Vim</h3>

<p>I hate it! <code>:set nohlsearch</code> FTW!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What I Learned Today - 12/01/2014 Edition]]></title>
    <link href="http://JustB.github.io/blog/2014/01/13/what-i-learned-today-12-slash-01-slash-2014-edition/"/>
    <updated>2014-01-13T00:36:12+01:00</updated>
    <id>http://JustB.github.io/blog/2014/01/13/what-i-learned-today-12-slash-01-slash-2014-edition</id>
    <content type="html"><![CDATA[<p>Today was a strange day. I took the resolution to install again Linux on my work laptop, after a year or so of <em>Windows only</em>.
&ldquo;Why did you do <strong>that</strong>?&rdquo; you could ask. I don&rsquo;t know.</p>

<p>Maybe because I needed Photoshop for my previous work. I don&rsquo;t know.
I&rsquo;ve learned much, though. I&rsquo;ve pushed the Windows development environment to the limit but, simple as that, I&rsquo;m not a Windows guy.</p>

<p>Just two minutes into my Linux environment and I felt home.</p>

<p>Anyway, what I learned today? (that&rsquo;s a rhyme!)</p>

<!--more-->


<h3>Accept merge conflicts as a whole (local/remote)</h3>

<p>It&rsquo;s as simple as</p>

<p><code>
git checkout --theirs /path/to/file
</code></p>

<p>or</p>

<p><code>
git checkout --ours /path/to/file
</code></p>

<p><a href="http://stackoverflow.com/questions/6650215/how-to-keep-the-local-file-or-the-remote-file-during-merge-using-git-and-the-com">Source</a></p>

<h3>Executing a command in Puppet in a specific directory</h3>

<p>Do you want to execute a command with puppet, but you need it to run from a specific folder?</p>

<p><code>
exec { command:
  cwd =&gt; "path/to/folder"
}
</code></p>

<p><a href="http://docs.puppetlabs.com/references/latest/type.html#exec">Puppet exec documentation</a></p>

<h2>Sites, Apps, Services, Videos</h2>

<ul>
<li><a href="http://markdalgleish.com/projects/bespoke.js/">Bespoke.js</a>: a wonderful presentation framework written in JavaScript.</li>
<li><a href="http://www.youtube.com/watch?v=L0pjVcIsU6A">Node.js explained</a>: an introduction to Node.js. I really liked it! Very concise, but also informative.</li>
<li><a href="http://apidocjs.com/">apiDoc</a>: npm package to generate documentation for RESTful web APIs.</li>
<li><a href="http://build-podcast.com/">Build podcasts</a>: an on-going series of podcasts on web development tools.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What I Learned Today - 13/10/2013 Edition]]></title>
    <link href="http://JustB.github.io/blog/2013/10/13/what-i-learned-13-10-2013/"/>
    <updated>2013-10-13T12:18:57+02:00</updated>
    <id>http://JustB.github.io/blog/2013/10/13/what-i-learned-13-10-2013</id>
    <content type="html"><![CDATA[<h2>Create a zip on the command line (simple edition)</h2>

<p>How to create a zip file in Linux? All the latest version of Ubuntu have an <em>Compress</em> entry in the contextual menu. But today I wanted to learn how to do it on the command line.</p>

<p>It turned out to be pretty simple:</p>

<p><code>
zip zipfile_name files_to_zip
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[What I Learned Today - 12/10/2013 Edition]]></title>
    <link href="http://JustB.github.io/blog/2013/10/12/what-i-learned-today-11-slash-10-slash-2013-edition/"/>
    <updated>2013-10-12T17:50:03+02:00</updated>
    <id>http://JustB.github.io/blog/2013/10/12/what-i-learned-today-11-slash-10-slash-2013-edition</id>
    <content type="html"><![CDATA[<h2>So what I learned today?</h2>

<h3>Replace method in Python</h3>

<p>In Python you can use the <code>replace</code> method on strings to replace a part of it with another</p>

<p><code>
In [3]: key = '/blobstore/quhab72=qaqerqfxbhr'
In [4]: key.replace('/blobstore/', '')
Out[4]: 'quhab72=qaqerqfxbhr'
</code></p>

<h3>Logging in AppEngine</h3>

<p>To have your debug logs appear in the console when you are running an AppEngine app in your development environment, just start the server with:</p>

<p><code>
$ dev_appserver.py --log_level=debug .
</code></p>
]]></content>
  </entry>
  
</feed>
