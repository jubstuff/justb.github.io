<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Euler | Jub's stuff]]></title>
  <link href="http://JustB.github.io/blog/categories/euler/atom.xml" rel="self"/>
  <link href="http://JustB.github.io/"/>
  <updated>2014-01-13T00:33:26+01:00</updated>
  <id>http://JustB.github.io/</id>
  <author>
    <name><![CDATA[Giustino Borzacchiello]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Project Euler - Problem 1]]></title>
    <link href="http://JustB.github.io/blog/2013/10/13/project-euler-problem-1/"/>
    <updated>2013-10-13T21:03:00+02:00</updated>
    <id>http://JustB.github.io/blog/2013/10/13/project-euler-problem-1</id>
    <content type="html"><![CDATA[<p>Today I started to solve the Project Euler problems. I don&rsquo;t know how much time I can spend solving these problems, but I hope to complete the <em>quest</em> in the span of a lifetime :).</p>

<p>So here is the first problem:</p>

<p><blockquote><p>If we list all the natural numbers below 10 that are multiples of 3 and 5, we get 3, 5, 6, 9. The sum of these multiples is 23.</p></p><p><p>Find the sum of all the multiples of 3 and 5 below 1000.</p><footer><strong>Problem 1 &ndash; Project Euler</strong></footer></blockquote></p>

<!--more-->


<p>The first try I could think of, was the obvious brute force approach. Cycle through all the numbers, and sum them up if they are multiples of 3 or 5:</p>

<p>```
sum = 0
for n in 1..1000</p>

<pre><code>if n % 3 == 0 || n % 5 == 0 then
    sum += n
</code></pre>

<p>```</p>

<p>This worked but I wasn&rsquo;t too satisfied: it was way too simple. So I started to think of a possible alternate solution.</p>

<p>I thought to loop through the multiples of 3 and 5 at the same time, having two variables to hold the partial result. Something like:</p>

<p>```
n3 = n5 = 0
sum = 0
while n3 &lt; 1000</p>

<pre><code>n3 += 3
n5 += 5
sum += n3 + n5
</code></pre>

<p>```</p>

<p>Well, in my defense, it seemed like a good idea&hellip;but it misses completely the solution. Time to move on.</p>

<p>What would you do when you have to think about a problem? The answer is obvious: take a shower. And it worked!</p>

<h2>The shower solution</h2>

<p>So what does the shower told me? Let&rsquo;s assume that we have to find the sum of all the multiples of 3 and 5 below 20, to keep the math simple.</p>

<p>These multiples are:</p>

<p><code>
3+5+6+9+10+12+15+18
</code>
that sum up to 78. Let&rsquo;s split them up in multiples of 3 and multiples of 5:</p>

<p>```
Multiples of 3:
3+6+9+12+15+18 = 63</p>

<p>Multiples of 5:
5+10+15 = 30
```
But we could look at those like:</p>

<p>```
3 * (1+2+3+4+5+6) = 63</p>

<p>5 * (1+2+3) = 30
<code>``
Start to see the pattern? If we could just find the sum of the first</code>N` natural numbers, we could find the sum just with simple multiplications. But we can! Here&rsquo;s how:</p>

<p>```
Sum of the first N numbers</p>

<p>N*(N+1)/2
```</p>

<p>So we could write:</p>

<p>```
3 * 6 * 7 / 2 = 63</p>

<p>5 * 3 * 4 / 2 = 30
```</p>

<h2>Problems, always problems</h2>

<p>I hear you: <em>&ldquo;But 63+30 isn&rsquo;t 78!&rdquo;</em>. Right, where is the problem? The problem is that we are including the number <code>15</code> twice. We have to subtract this number from the total to have the correct solution:</p>

<p>```
3 * 6 * 7 / 2  = 63</p>

<pre><code>             +
</code></pre>

<p>5 * 3 * 4 / 2  = 30</p>

<pre><code>             -
</code></pre>

<p>15 * 1 * 2 / 2 = 15</p>

<pre><code>           ------
             78
</code></pre>

<p>```</p>

<p>Why is this? Because 15 = 5 * 3, so we have to consider this number and all its multiples only once (as it should count as a multiple of 3 <strong>or</strong> a multiple of 5).</p>

<p>Now we are very close to the alternate solution: there is just one more thing to consider: how do we get <code>N</code> to calculate the first <code>N</code> numbers? In our example we found the sum for the first 6 numbers for 3, the first 3 ones for 5 and 1 for 15. How did we find these values?</p>

<p>```
3 * (1+2+3+4+5+6) = 63</p>

<pre><code>                +   
</code></pre>

<p>5 * (1+2+3)       = 30</p>

<pre><code>                -   
</code></pre>

<p>15 * 1            = 15</p>

<pre><code>              ------
                78  
</code></pre>

<p>```</p>

<p>It&rsquo;s very simple: we just have to divide the max value for the number and take the integer part of the result.</p>

<p>```
20 / 3 = 6</p>

<p>20 / 5 = 4</p>

<p>20 / 15 = 1
```</p>

<p>In the case of 5, we have to decrement by 1, because the max value is out of the range, that&rsquo;s why we got 3 instead of 4.</p>

<h2>Alternate solution</h2>

<p>So here is the alternate solution:</p>

<p>```</p>

<p>n3 = 1000 / 3
n5 = (1000 / 5) &ndash; 1
n15 = (1000 / 15)</p>

<p>sum3 = 3 * n3 * (n3 + 1) / 2
sum5 = 5 * n5 * (n5 + 1) / 2
sum15 = 15 * n15 * (n15 + 1) / 2</p>

<p>sum = sum3 + sum5 &ndash; sum15</p>

<p>```</p>
]]></content>
  </entry>
  
</feed>
