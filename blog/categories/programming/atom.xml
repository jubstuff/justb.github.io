<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Programming | Little Right's Journal]]></title>
  <link href="http://JustB.github.io/blog/categories/programming/atom.xml" rel="self"/>
  <link href="http://JustB.github.io/"/>
  <updated>2014-02-01T00:59:01+01:00</updated>
  <id>http://JustB.github.io/</id>
  <author>
    <name><![CDATA[Giustino Borzacchiello]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[On Software Inventory]]></title>
    <link href="http://JustB.github.io/blog/2012/07/12/on-software-inventory/"/>
    <updated>2012-07-12T12:18:57+02:00</updated>
    <id>http://JustB.github.io/blog/2012/07/12/on-software-inventory</id>
    <content type="html"><![CDATA[<p>Few days ago Joel Spolsky published a post on his blog from the title: <a href="http://www.joelonsoftware.com/items/2012/07/09.html">&ldquo;Software Inventory&rdquo;</a>.
In this post, he associates &ldquo;inventory costs&rdquo; to software, just like a traditional factory. Spolsky highlights these points where inventory piles up:</p>

<ul>
<li>Feature backlogs</li>
<li>Bug backlogs</li>
<li>Undeployed features</li>
</ul>


<p>After reading his analysis, I thought that the very difference between baking bread and developing software is the <strong>absence of phisicity</strong>.
Having thousands of ounces of flour is very different from having a thousands more lines of code in a file.
Even if they could have the same cost of management.</p>

<p>What can be the solution, then? We need to make the invisible, visible, and material what is immaterial.
All the things that slow down the development process <strong>must hurt</strong> and be always visible, just like the flour should be stocked in the factory offices.</p>

<p>So, I like the idea that moves <a href="https://trello.com/">Trello</a>, the project manager developed by <a href="http://www.fogcreek.com">Fog Creek</a></p>

<blockquote>
  Trello works great for a reasonable amount of inventory, but it <strong>intentionally</strong>
starts to get klunky if you have too many cards in one list.
</blockquote>


<p>Just like a crowded desk, Trello is difficult to manage if there are too many cards.</p>

<p>In the end, there are advantages in the absence of phisicity, but we must consider the hidden costs that very often are ignored.</p>
]]></content>
  </entry>
  
</feed>
